인터럽트 (Interrupt)

  인터럽트란 프로세서가 프로그램을 실행하고 있을 때, 입출력 장치나 예외상황의 핸들링이 필요할 경우 프로세서에서 실행 중인 프로그램을 멈추고 상황을 처리하도록 하는 명령이다.
  주요 인터럽트로는 CPU 선점형 스케쥴러의 타이머 인터럽트, 입출력 인터럽트, 1/0 연산 인터럽트(Divide-by-Zero Interrupt)과 등이 있다.
  
  인터럽트 종류 : 
      하드웨어 인터럽트(=외부 인터럽트)
          입출력장치, 타이밍 장치, 전원 등 외부적인 요인에 의해 발생. ISR 종료 후 대기.
      소프트웨어 인터럽트(=내부 인터럽트)
          소프트웨어가 OS 서비스를 요청하거나 에러를 일으켰을 때 발생.
          파일 읽기/쓰기, 0으로 나누기, Overflow 등이 있다.
          ISR 종료 후 다시 프로그램으로 돌아거나 프로그램을 강제로 종료한다.
          시스템 콜도 의도적으로 일으킨 예외 인터럽트이다.
          
  인터럽트 처리 과정 : 
      프로그램 실행 중 인터럽트가 발생하였다면,
      1. CPU는 실행 중이던 명령어를 마치고 인터럽트 라인을 통해 인터럽트가 걸렸음을 인지.
      2. 인터럽트 벡터를 읽고 ISR 주소값을 얻어 **ISR(Interrupt Service Routine)**로 점프하여 루틴을 실행한다.
          인터럽트 벡터는 인터럽트 발생시 처리해야 할 ISR의 주소를 인터럽트 별로 보관하고 있는 테이블임.
          ISR은 인터럽트 핸들러라고도 하며 인터럽트를 처리하는 프로그램이며 OS에서 지원한다. 인터럽트별로 처리해야할 내용이 있다.
      3. ISR에서 동기화를 막기 위해 인터럽트를 금지한다.
      4. 프로세서는 현재까지 수행중이었던 상태를 해당 process의 **PCB(Process Control Block)**에 저장한다.
      5. PC(Program Counter, IP)에 다음에 실행할 명령의 주소를 저장한다.
      6. 해당 인터럽트를 처리한다.
      7. 다 처리하면, 대피시킨 프로세서의 상태를 복원함.
      8. ISR의 끝에 IRET 명령어에 의해 인터럽트가 해제된다.
      9. IRET 명령어가 실행되면, 대피시킨 PC 값을 복원하여 이전 실행 위치로 복원한다.
