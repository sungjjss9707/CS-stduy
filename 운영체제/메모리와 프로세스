메모리의 기본개념
  
    주소 바인딩 (Address Binding)
        프로세스가 CPU에 의해서 실행되기 위해서는 각각의 프로세스에게 메모리가 할당돼야 한다.  
        메모리가 할당 된다는 것은 프로세스의 구성요소인 프로그램의 코드와 데이터가 실제로 메모리의 어떤 위치에 저장될지 그 주소가 결정된다는 것을 의미한다. 
        즉 프로그램 코드 한줄한줄 데이터영역을 이루는 변수하나하나에 메모리 주소가 결정된다는 뜻이다.
        이 과정이 주소 바인딩이며 프로세스는 이 주소 바인딩이 되어야지만이 실제로 실행이 가능해 진다. 
        따라서 주소 바인딩은 프로세스나 프로그램이 알고있는 주소공간과 실제 메모리 주소로의 변환 또는 매핑의 개념이라고 할 수 있다.
        
        소스 프로그램에서 예를들면 코드들이 변수의 이름이나 함수같은 심벌(symbol)형태로 되어 있다. 
        컴파일을 하게 되면 변수 이름이나 함수 이름들이 사라지고 그것들이 위치를 나타내는 어떤 값을 가지게 된다.(재배치 가능 주소) 
        하지만 이 주소는 실제 메모리에 바인딩 될 주소는 아니다. 
        컴파일러를 통해 그 공간이 숫자로 표현된 주소로 변환되며 연결편집기(linker)를 통해 프로세스 주소 공간의 절대 주소로 변환이 된다. 
        이 주소가 메모리 주소로 변환하는 과정을 주소 바인딩이라고 할 수 있다. 
        그리고 컴파일 단계의 마지막인 Linking작업을 거치게되면 최종적으로 전체 프로그램이 만들어지기 때문에 프로그램 하나의 전체 주소를 갖게 된다.
        
        요약하자면 프로세스가 CPU상에서 실제로 동작하고 실행되기 위해서는 메모리에 할당이 돼야 하고 
        그 말은 프로그램의 여러 요소들이 실제 메모리 주소를 할당받아야 한다. 
        또한 그 전에도 이 프로그램 구성요소들은 이미 컴파일러, 링커를 통해 자기만의 주소공간에서 주소값을 가지고 있게된다. 
        그래서 주소바인딩이라는 것은 프로그램 프로세스의 주소라는 개념과 실제 메모리사이에서의 변환을 의미한다.
