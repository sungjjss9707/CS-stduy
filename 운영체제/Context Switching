Context Switching

  Context Switching은 CPU가 현재 수행하고 있는 작업(Process, Thread)의 상태를 저장하고
  다음 진행할 작업의 상태 및 Register 값들에 대한 정보(Context)를 읽어 새로운 작업의 Context 정보로 교체하는 과정이다.
  여기서 Context란 CPU가 다루는 작업에 대한 정보를 말하고, 대부분의 정보는 Register에 저장되고 PCB로 관리된다.
  요약하면 CPU가 이전의 프로세스 상태를 PCB에 보관하고, 또 다른 프로세스의 정보를 PCB에서 읽어서 레지스터에 적재하는 과정을 말합니다.
  Context Switching은 Interrupt가 발생하거나, 실행 중인 CPU 사용 시간을 모두 소모하거나, 입출력을 위해 대기해야 하는 경우 발생
  즉, Context Switching은 프로세스가 Ready -> Running , Running -> Ready , Running -> Block 처럼 상태 변경 시에 발생
  Context Switching을 하는 주체는 CPU 스케쥴러이다.
  
  Context Switching 시 소요되는 시간을 Cost라고 표현한다. Cost는 낭비되는 시간이라고 생각할 수 있다. 이렇게 어떤 과정을 할 때 소모되는 Cost들을 Overhead라고 한다. 
  그러므로 어떤 작업을 할 때 Overhead가 높다는 것은 그 과정을 수행하기 위해 필요한 다른 작업들의 Cost가 높다고 할 수 있다.
  따라서 Context Switching은 Overhead가 높은 작업이고 잦은 Context Switching 는 성능 저하를 가져온다.
  Context Switching이 높은 Overhead를 갖음에도 수행하는 이유는 그것을 감안해도 더 이득이기 
  예를들어 프로세스를 수행하다가 I/O event가 발생하여 BLOCK 상태로 전환시켰을 때, CPU가 그냥 놀게 놔두는 것보다 다른 프로세스를 수행시키는 것이 효율적이므로, 
  Context Switching을 수행하여 CPU로 다른 프로세스를 실행시킴.
