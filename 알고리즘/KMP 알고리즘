KMP알고리즘

  - 문자열에서 패턴찾는 알고리즘이다.
  - 길이가 M인 문장에서 길이가 N인 단어가 몇번나오는지 검색하려면 브루트포스로는 M*N의 시간이 소모된다.
    이건 시간이 너무 길기때문에 KMP알고리즘을 쓴다
    검색하고자 하는 단어의 접미사==접두사 인 최대 길이를 PI함수에 저장한다.
      A       PI[0]=0
      AB      PI[1]=0
      ABC     PI[2]=0
      ABCA    PI[3]=1
      ABCAB   PI[4]=2
      ABCABD  PI[5]=0
      
      코드 : 
          void make_pi(){
	          int i,k;
	          pi[0]=0;
	          for(i=1, k=0; i<word.length(); ++i){
	          	while(k>0&&word[i]!=word[k]){
		          	k=pi[k-1];
	          	}
	          	if(word[i]==word[k]) pi[i] = ++k;
              else pi[i]=0;
	          }
          }
          
      그 후 문장과 단어를 한글자씩 비교하면서 접두사==접미사 같은 부분만큼 점프할수있어서 시간이 단축됨
      시간복잡도 : O(N+M)
