힙(Heap)

  완전 이진 트리에 있는 노드 중에서 키 값이 가장 큰 노드나 가장 작은 노드를 찾게 만든 자료구조
  힙은 이진탐색트리와 달리 중복된 값이 허용됨. 
  최대힙은 가장 큰 값이 모든 서브트리의 루트에 있고, 최소힙은 반대임
  힙에서는 루트 노드의 원소만을 삭제 할 수 있다. 그 후에는 노드들을 조정하여 루트를 다시 구함
  우선순위 큐를 구현할때 사용됨
  최대 힙
    키 값이 가장 큰 노드를 찾기 위한 완전 이진 트리
    부모 노드의 키 값 >= 자식 노드의 키 값
    루트 노드: 키 값이 가장 큰 노드

  최소 힙
    키 값이 가장 작은 노드를 찾기 위한 완전 이진 트리
    부모 노드의 키 값 < 자식 노드의 키 값
    루트 노드: 키 값이 가장 작은 노드
    
    
  힙 구현
      힙은 일반적으로 배열을 이용하여 구현함. 
      힙은 완전 이진 트리이므로 중간에 비어있는 요소가 없기 때문에 배열의 공간을 모두 사용함.
      배열 인덱스는 1부터 시작
      왼쪽 자식노드 index = (부모 노드 index) * 2
      오른쪽 자식노드 index = (부모 노드 index) * 2 + 1
      부모 노드 index = (자식노드 index) / 2

      삽입
          완전 이진트리의 마지막 노드에 이어서 새로운 노드를 추가한다.
          추가된 새로운 노드를 부모의 노드와 비교하여 교환한다.
          힙 구조를 만족할 때 까지 2를 반복한다.
      삭제
          루트 노드가 가장 우선 순위가 높으므로 루트 노드를 삭제한다.
          루트 노드가 삭제된 빈자리에 완전 이진트리의 마지막 노드를 가져온다.
          루트 자리에 위치한 새로운 노드를 자식 노드와 비교하여 교환한다.
          힙 구조를 만족할 때 까지 3을 반복한다.
