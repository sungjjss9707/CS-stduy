완전탐색

컴퓨터의 빠른 계산 능력을 이용하여 가능한 경우의 수를 일일이 나열하면서 답을 찾는 방법
'무식하게 푼다'라는 의미인 Brute-Force(브루트 포스) 라고도 부르며, 직관적이어서 이해하기 쉽고 문제의 정확한 값을 얻어낼 수 있는 가장 확실하며 기초적인 방법이다.
하지만 완전탐색은 답으로 가능한 경우의 수가 많은 경우에는 사용하기 어려우므로 완전 탐색을 이용할 수 있는 경우인지 잘 파악하는게 중요하다.

완전탐색 자체가 알고리즘은 아니기 때문에 이를 이용하기 위해서 여러 알고리즘이 쓰임
  1. 단순 Brute-Force : 단순 for, if문으로 모든 가능한 답을 검사함
  2. 비트마스크 (Bitmask) : 2진수를 이용하는 컴퓨터의 연산을 이용하는 방식이다.
  3. 재귀 함수
  4. 순열 (Permutation)
  5. DFS, BFS
  
 
  DFS
  
    -Depth First Search
    -깊이우선탐색 : 형재노드보다 자식노드를 우선탐색한다
    -스택 혹은 재귀호출로 구현함
    장점 : 저장공간의 수요가 비교적 적다, BFS보다 구현이 간단하다
    단점 : 해가없는 경로에 빠질 수 있다. 목표 도달하는 경로가 여러개일 경우 최단경로가 아닐 수 있다.
    
    
  BFS
  
    -Breadth First Search
    -너비우선탐색 : 자식보다 형제노드를 우선탐색한다
    -queue로 구현함
    장점 : 최단경로를 보장한다
    단점 : 메모리가 많이듬
