인덱스 

  테이블에 대한 동작속도를 높이는 기술로 데이터베이스 조회 기능 성능을 높인다.
  인덱스를 이용하면 Full Scan과 Table Scan을 줄이거나 없애서 속도를 높인다.
  Full Scan 시 시간복잡도 - O(N)
  인덱스 사용 시 시간복잡도 - O(logN)
  
  인덱스를 사용하면 좋을 상황
    SELECT와 Join이 잦은 경우
    테이블의 데이터가 많은 경우
    SELECT를 제외한 DML(=변경)이 잘 일어나지 않는 테이블
  
  DML이 일어날 때 인덱스의 변화
      1. INSERT : 데이터 추가 시, 새로운 인덱스 추가
      2. DELETE : 데이터 삭제 시, 해당 인덱스가 삭제되는 대신 사용하지 않는다는 표시를 남긴다.
                    -> Table의 레코드 개수와 Index 개수가 달라진다.
      3. Update : DELETE + INSERT
                    -> UPDATE 기능이 따로 있지 않고 DELETE 수행 후 INSERT가 일어난다.
                    -> 작업이 두 번 일어난다.
                    
  인덱스 생성 :
      1. CREATE 이용 : CREATE INDEX 인덱스명 ON 테이블명(컬럼명);
      2. ALTER 이용 : ALTER TABLE 테이블명 ADD INDEX 인덱스명(컬럼명);
      
  장점 : 인덱스 파일은 항상 정렬된 상태이다.
      1. 원하는 데이터를 찾기 위해 테이블을 검색하는 작업을 줄이거나 없앨 수 있다.
      2. 색인화된 인덱스 파일 검색으로 검색 속도를 향상시킨다.
          *색인화 : 특정 내용이 들어있는 정보를 쉽게 찾아볼 수 있도록 표지를 넣거나 일정한 순서에 따라 배열한 것
  단점 : 테이블에 새로운 데이터를 추가하거나 갱신, 삭제가 자주 일어나면 좋지 않다.
      *테이블에 들어있는 데이터에만 변화가 있는 게 아니라 인덱스에도 추가, 갱신이 일어나기 때문에 오버헤드가 발생할 수 있다.
      
