RISC구조

  Reduced Instruction Set Computer, RISC
  IBM에서 1980년에 발표하고 MIPS를 창시한 컴퓨터과학자 데이비드 패터슨 교수등이 정립한 CPU의 명령어셋 아키텍처와 
  마이크로 아키텍처 설계에 대해 새로 제시한 개념 내지는 그 개념에 의해 설계된 CPU를 의미한다.
  기본적인 개념은 트랜지스터 기반의 메인프레임을 개선하는 과정에서 개발된 아키텍처 개념으로, 최대한 단순히 설명하자면 그동안 별 생각 없이 중구난방으로 만들어 온 CPU 명령어셋을 C
  PU를 고속화시키는 데 적절하게 재정립하여 같은 트랜지스터 숫자를 투입하면서도 더 높은 성능의 CPU를 만들자는 것이다.
  
   CISC 명령어셋에 대해 지적되는 문제점 : 
      1. 명령어 길이가 제각각이다. 따라서 명령어를 인출할 때 언제가 명령어 종료 시점인지 알 수 없다.
      2. 명령어 포맷이 중구난방이다. 때문에 명령어 해석기에서 특정 내용을 액세스하려고 할 경우 그 명령어에 대한 인출과 해석이 완전이 끝나야 가능하다.
      3. 명령어에 레지스터 대상이 아닌 메모리를 대상으로 한 연산이 섞여 있다.
      4. 각 명령어들의 실행 사이클이 제각각이다. 어떤 명령어는 1사이클, 어떤 명령어는 3사이클 하는 식. 이러한 구조는 파이프라인의 효율성을 심각하게 저하시킨다.
      
  CISC의 단점을 없엔 RISC의 특징 : 
      1. 명령어 길이를 16bit 혹은 32bit로 일정하게 정리하였다. 따라서 명령어 해석기는 무슨 명령어인지 별도로 판단할 필요 없이 
          16bit 혹은 32bit만큼 인출동작을 기계적으로 수행하면 되므로 명령어 해석기가 크게 단순화되었다. 또한 1사이클에 1명령어가 정확하게 들어오는 것이 보장
      2. 각 명령어들의 실행 사이클을 1사이클로 조정하였다.
  
  단점 :
      1. 명령어 길이가 일정하기 때문에 상황에 따라 8~32bit를 오가는 CISC의 가변 길이 명령어에 비해 코드 밀도 면에서 원천적으로 불리하다.
  

  
