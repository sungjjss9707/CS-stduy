I/O 작업

  I/O란 Input/Output의 약자로 입출력 작업을 말한다.
  네트워크에서는 소켓으로 연결되어 있는 다른 프로세스에게 데이터를 보내는 출력(send(), write()) 작업과 
  다른 프로세스로부터 데이터를 받는 입력(recv(), read()) 작업이 수행된다.
  I/O 작업은 유저 프로세스(쓰레드)가 커널에 요청을 하면, 커널 레벨에서 작업을 수행한 뒤 다시 유저 프로세스에게 결과를 반환하는 방식으로 진행된다.
  
  봉쇄(Blocking) 모델과 비봉쇄(Non-Blocking) 모델
      봉쇄(Blocking) 방법은 유저 프로세스가 커널에게 입출력 작업 요청을 위한 함수를 호출하면 커널은 작업이 완료될 때까지 함수를 반환하지 않는다. 
      따라서 유저 프로세스는 커널에서 함수가 반환될 때까지 프로그램을 동작시키지 않고 대기한다. 프로세스 제어권은 커널에게 있다.
      비봉쇄(Non-Blocking) 방법은 유저 프로세스가 함수를 호출하면 커널은 작업 완료의 여부와 상관 없이 함수를 바로 반환한다.
      따라서 유저 프로세스는 대기하지 않고 프로그램을 동작시킬 수 있다. 프로세스 제어권은 유저 프로세스에게 있다.
      
  동기(Synchronous)와 비동기(Asynchronous)
      동기 : 현재 작업에 대한 응답을 받음과 동시에 다음 작업에 대한 요청을 할 수 있어 작업의 종료가 순차적인 방법
          유저 프로세스와 커널이 모두 데이터 상태를 인지하고 있어야 유저 프로세스가 커널에게 다음 작업을 요청할 수 있다.
          유저 프로세스는 데이터 상태를 인지하기 위해 커널에게 입출력 작업을 요청한 뒤 지속적으로 커널에게 작업 완료 여부를 물어 본다.
      비동기 : 현재 작업에 대한 응답을 받지 않아도 다음 작업을 요청할 수 있어 작업의 종료가 순차적이지 않은 방법
          유저 프로세스는 데이터 상태를 인지하고 있지 않아도 된다.
          따라서 커널 프로세스가 입출력 작업을 완료했다면 이벤트 핸들러(Callback 함수 호출)를 동작시켜 
          작업 완료 여부를 유저 프로세스에게 통지함으로써 유저 프로세스는 작업의 종료 여부를 알 수 있다.
